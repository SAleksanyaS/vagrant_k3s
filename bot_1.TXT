from config.config import BOT_NAME, logger
from datetime import datetime
from infrastructure.sber_sdk import sber_bot
from domain.logic import bot_logic  # если нужна логика
from infrastructure.excel_repo import excel_repo  # если нужна запись логов

def create_feedback_keyboard():
    # Здесь должен быть код создания клавиатуры с кнопками лайк/дизлайк
    pass

@sber_bot.on_message
def handle_user_message(params):
    try:
        message = params.message
        if not message.text_message:
            return  # Только текстовые сообщения
        text = message.text_message.text.strip()

        # Логируем полный чат в файл, если нужно
        if excel_repo:
            excel_repo.append_full_log(
                FullLogEntry(user=None, text=text, timestamp=datetime.now(), source="user")
            )

        # Проверяем упоминание бота
        if f"@{BOT_NAME}".lower() not in text.lower():
            return

        # Обрабатываем сообщение (тут можно вызвать бизнес-логику)
        result = bot_logic.process_message(None, text)  # user=None, не учитываем
        if result.get("reply"):
            sber_bot.send_message(params.peer, result["answer"], attachments=create_feedback_keyboard())

    except Exception as e:
        logger.error("Ошибка при обработке сообщения: %s", e, exc_info=True)

@sber_bot.on_message
def handle_feedback(params):
    try:
        message = params.message
        if not message.text_message:
            return
        text = message.text_message.text.strip().lower()

        if text in ("like", "dislike"):
            # Просто благодарим за отзыв без получения пользователя
            sber_bot.send_message(params.peer, "Спасибо за ваш отзыв!")
    except Exception as e:
        logger.error("Ошибка при обработке обратной связи: %s", e, exc_info=True)

def register_handlers():
    sber_bot.on_message(handle_user_message)
    sber_bot.on_message(handle_feedback)
