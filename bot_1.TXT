from datetime import datetime
from config.config import BOT_NAME, SASHA_ID, logger
from domain.models import FullLogEntry  # если есть такая модель
from infrastructure.sber_sdk import sber_bot  # Импортируем sber_bot, если он глобален
from utils.keyboard import create_feedback_keyboard  # пример импорта клавиатуры


excel_repo = None
bot_logic = None


def initialize_handlers(_excel_repo, _bot_logic):
    global excel_repo, bot_logic
    excel_repo = _excel_repo
    bot_logic = _bot_logic


def register_handlers(sber_bot_instance):
    @sber_bot_instance.on_message
    def handle_user_message(params):
        try:
            message = params.message
            user = None
            if hasattr(message, "sender") and message.sender is not None:
                user = message.sender.uid
            elif hasattr(message, "author") and message.author is not None:
                user = message.author.uid
            else:
                logger.warning("Не удалось получить пользователя из сообщения")
                return

            if not message.text_message:
                return

            text = message.text_message.text.strip()

            excel_repo.append_full_log(
                FullLogEntry(user=user, text=text, timestamp=datetime.now(), source="user")
            )

            if f"@{BOT_NAME}".lower() not in text.lower():
                return

            result = bot_logic.process_message(user, text)
            if result.get("reply"):
                sber_bot_instance.send_message(params.peer, result["answer"], attachments=create_feedback_keyboard())

        except Exception as e:
            logger.error("Ошибка при обработке сообщения: %s", e, exc_info=True)

    @sber_bot_instance.on_message
    def handle_feedback(params):
        try:
            message = params.message

            if not message.text_message:
                return
            text = message.text_message.text.strip().lower()

            user = None
            if hasattr(message, "sender") and message.sender is not None:
                user = message.sender.uid
            elif hasattr(message, "author") and message.author is not None:
                user = message.author.uid
            else:
                logger.warning("Не удалось получить пользователя из сообщения (feedback)")
                return

            peer = params.peer

            if text in ("like", "dislike"):
                original_question = "Неизвестен"
                original_answer = "Неизвестен"
                mention_sasha = bot_logic.process_feedback(user, original_question, original_answer, text)

                if mention_sasha and SASHA_ID:
                    notification = f"@{SASHA_ID} Пользователь {user} недоволен ответом."
                    sber_bot_instance.send_message(peer, notification)
                else:
                    sber_bot_instance.send_message(peer, "Спасибо за ваш отзыв!")

        except Exception as e:
            logger.error("Ошибка при обработке обратной связи: %s", e, exc_info=True)
